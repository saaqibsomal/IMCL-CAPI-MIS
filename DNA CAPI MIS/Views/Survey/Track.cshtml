@model IEnumerable<DNA_CAPI_MIS.Models.SurveyDataView>

@{
    ViewBag.Title = "Surveyor Tracker";
    bool firstRec = true;
}

<style type="text/css">
    .POI_Legend {
        width: 24px;
        height: 24px;
        border-radius: 12px;
        background: #000;
    }
    .skin-blue .sidebar {
         border-bottom: none; 
    }
</style>

@section Scripts {
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/bootstrap/AdminLTE")
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=drawing,places&v=3.exp&language=ar"></script>
<script src="~/Content/js/bootstrap-datepicker.js"></script>
<link href="~/Content/css/datepicker.css" rel="stylesheet" />
<link href="~/Content/Site.css" rel="stylesheet" />
<link href="~/Content/bootstrap-multiselect-master/dist/css/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/bootstrap-multiselect-master/dist/js/bootstrap-multiselect.js"></script>
<script src="~/Content/Survey/SurveyTrack.js"></script>

<script type="text/javascript">

    var trackPoint = "/Images/TrackPoint8.png";
    var markers = [
        @foreach (var item in Model)
        {
            if (!firstRec)
            {
                WriteLiteral(",");
            }
            WriteLiteral("{title: \"" + Url.Encode( item.FieldValue ) + "\",");
            WriteLiteral("user: '" + item.SurveyorName + "',");
            WriteLiteral("lat: " + item.Latitude + ",");
            WriteLiteral("lng: " + item.Longitude + ",");
            WriteLiteral("ID: " + item.SubCategoryID + ",");
            WriteLiteral("Cat: \"" + item.SubCategoryName + "\",");
            WriteLiteral("sid: " + item.sbjnum + ",");
            WriteLiteral("dt: '" + item.yy + '-' + item.mm + '-' + item.dd + "',");
            WriteLiteral("tm: '" + item.hh + ":" + item.mins + ":" + item.ss + "',");
            WriteLiteral("inv: 0 }");     //Invalid
            firstRec = false;
        }
    ];
    var userPaths = [];

    var makersCatId = [];
    var markersCatName = [];

    var map;
    var placemarks = [];

    var polyLines = new Array();
    var surveydates = new Array();
    var polyLineFix = new Array();

    var showStartEndMarkers = true;
    var showTrackPointMarkers = false;

    var seMarkersArray = [];
    var pathPointArray = [];

    window.onload = function () {
        //Load Category data
        var catColors = new Object();
        @if (ViewBag.CategorySummary != null) {
            foreach (var cat in ViewBag.CategorySummary)
            {
                var colorcode = "#" + cat.Color_Red.ToString("X") + cat.Color_Green.ToString("X") + cat.Color_Blue.ToString("X");
                WriteLiteral("catColors[\"" + cat.ID + "\"] = \"" + colorcode + "\";");
            }
        }

        //Generate markers on the map
        //ddlFieldData();  // Removing this method call.
        $('#dvMap').height(window.innerHeight - 100);

        if (markers.length > 0) {
            var mapOptions = {
                center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
                zoom: 15,
                mapTypeControlOptions: {
                    mapTypeIds: [google.maps.MapTypeId.ROADMAP, google.maps.MapTypeId.SATELLITE, google.maps.MapTypeId.TERRAIN
                    , google.maps.MapTypeId.HYBRID]
                },

                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var infoWindow = new google.maps.InfoWindow();
            map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);

            google.maps.event.addListenerOnce(map, 'tilesloaded', function () {
                addSurveyorTracks();
            });

            //...

            for (i = 0; i < markers.length; i++) {
                var data = markers[i];
                data.title = decodeURIComponent(data.title).replace(/\+/g, " ");
                var myLatlng = new google.maps.LatLng(data.lat, data.lng);

                var path;
                var colour = catColors[data.ID];

                if (data.Cat.length > 0 && data.ID > 0) {
                    var marker = new google.maps.Marker({
                        position: myLatlng,
                        map: map,
                        title: data.title,
                        @if (ViewBag.CurrentSIdData != null)
                        {
                            WriteLiteral("draggable: true");
                        }
                        else {
                           WriteLiteral(@"icon: {
                           path: path = google.maps.SymbolPath.CIRCLE,
                           fillOpacity: 1,
                           fillColor: colour,
                           strokeWeight: 1,
                           scale: 5 //pixels
                       }");
                    }

                    });
                }

                placemarks[i] = marker;
                makersCatId[i] = data.ID;
                markersCatName[i] = data.Cat;
            }
        }
    }

</script>
}
<!-- <div style="display:block; position:absolute; z-index='100'" id="divSummery"></div> -->

<div class="row">
    <div class="box-body">
        <div class="mappg-dtpck-area" style="display:none;">
            <div class="mappg-control">
                <div>City</div>
                <div>
                    <select id="fctlCity" multiple="multiple" style="width:200px;height:30px;">
                        @{
                            var countryName = "";
                            var firstrow = true;
                        }
                        @if (ViewBag.AllCitiesList != null)
                        {
                            foreach (var ct in ViewBag.AllCitiesList)
                            {
                                if (countryName != ct.CountryName)
                                {
                                    if (!firstrow)
                                    {
                                        WriteLiteral("</optgroup>");
                                    }
                                    countryName = ct.CountryName;
                                    firstrow = false;
                                    WriteLiteral("<optgroup label=\"" + countryName + "\">");
                                }
                                <option value="_@ct.ID">@ct.Name</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="mappg-control">
                <div>Surveyor</div>
                <div>
                    <select id="fctlSurveyor" multiple="multiple" style="width:200px;height:30px;">
                        @if (ViewBag.surveyorname != null)
                        {
                            foreach (var sn in ViewBag.surveyorname)
                            {
                                <option>@sn.Name</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="mappg-control">
                <div>From Date</div>
                <div>
                    <input class="btn btn-default" type="text" id="fromdate" style="width:100px;height:32px;">
                </div>
            </div>
            <div class="mappg-control">
                <div>To Date</div>
                <div>
                    <input class="btn btn-default" type="text" id="todate" style="width:100px;height:32px;">
                </div>
            </div>
            <div class="mappg-control">
                <div>&nbsp;</div>
                <div>
                    <input type="button" id="btnsubmit" value="Filter" style="width:100px;height:32px;">
                </div>
            </div>
            <div class="panelSurveyordates" style="display:none;">
                <div class="mappg-control">
                    <div>Track Dates</div>
                    <div>
                        <select id="mctlTrackDates" multiple="multiple" style="width:100px;height:30px;">
                        </select>
                    </div>
                </div>
                <div class="mappg-control">
                    <div>Options</div>
                    <div>
                        <select id="mctlOptions" multiple="multiple" style="width:100px;height:30px;">
                            <option value="SE">View Start/End Markers</option>
                            <option value="TP">View Track Markers</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Left side column. contains the logo and sidebar -->
    <div id="dvMap" style="height: 100vh; float:left; width:100%;">
    </div>
</div>


